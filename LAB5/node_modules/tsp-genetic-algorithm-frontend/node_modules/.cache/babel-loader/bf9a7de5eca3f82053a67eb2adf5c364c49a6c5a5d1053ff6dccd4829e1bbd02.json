{"ast":null,"code":"import React,{useRef,useState}from'react';import ForceGraph2D from'react-force-graph-2d';import{graphApi}from'../../services/api';import{logger}from'../../services/logger';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Graph=_ref=>{let{onGraphSelect}=_ref;const[graphData,setGraphData]=useState({nodes:[],links:[]});const graphRef=useRef();// Завантаження графа при виборі\nReact.useEffect(()=>{const loadGraph=async graphId=>{try{const data=await graphApi.getGraph(graphId);if(data){const formattedData={nodes:data.nodes.map(node=>({id:node.id,x:node.x,y:node.y})),links:data.edges.map(edge=>({source:edge.source,target:edge.target,weight:edge.weight}))};setGraphData(formattedData);logger.info('Граф завантажено успішно',{graphId});}}catch(error){logger.error('Помилка при завантаженні графа',error);}};if(onGraphSelect){loadGraph(onGraphSelect);}},[onGraphSelect]);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"\\u0412\\u0456\\u0437\\u0443\\u0430\\u043B\\u0456\\u0437\\u0430\\u0446\\u0456\\u044F \\u0433\\u0440\\u0430\\u0444\\u0430\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[600px] border rounded-lg\",children:/*#__PURE__*/_jsx(ForceGraph2D,{ref:graphRef,graphData:graphData,nodeLabel:\"id\",nodeColor:()=>'#1a56db',linkColor:()=>'#e5e7eb',nodeRelSize:6,linkWidth:1,linkDirectionalParticles:2,linkDirectionalParticleSpeed:0.005})})]});};export default Graph;","map":{"version":3,"names":["React","useRef","useState","ForceGraph2D","graphApi","logger","jsx","_jsx","jsxs","_jsxs","Graph","_ref","onGraphSelect","graphData","setGraphData","nodes","links","graphRef","useEffect","loadGraph","graphId","data","getGraph","formattedData","map","node","id","x","y","edges","edge","source","target","weight","info","error","className","children","ref","nodeLabel","nodeColor","linkColor","nodeRelSize","linkWidth","linkDirectionalParticles","linkDirectionalParticleSpeed"],"sources":["C:/files/dev/CPSD/LAB5/frontend/src/components/Graph/Graph.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ForceGraph2D from 'react-force-graph-2d';\r\nimport { graphApi } from '../../services/api';\r\nimport { logger } from '../../services/logger';\r\n\r\nconst Graph = ({ onGraphSelect }) => {\r\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\r\n  const graphRef = useRef();\r\n\r\n  // Завантаження графа при виборі\r\n  React.useEffect(() => {\r\n    const loadGraph = async (graphId) => {\r\n      try {\r\n        const data = await graphApi.getGraph(graphId);\r\n        if (data) {\r\n          const formattedData = {\r\n            nodes: data.nodes.map(node => ({\r\n              id: node.id,\r\n              x: node.x,\r\n              y: node.y\r\n            })),\r\n            links: data.edges.map(edge => ({\r\n              source: edge.source,\r\n              target: edge.target,\r\n              weight: edge.weight\r\n            }))\r\n          };\r\n          setGraphData(formattedData);\r\n          logger.info('Граф завантажено успішно', { graphId });\r\n        }\r\n      } catch (error) {\r\n        logger.error('Помилка при завантаженні графа', error);\r\n      }\r\n    };\r\n\r\n    if (onGraphSelect) {\r\n      loadGraph(onGraphSelect);\r\n    }\r\n  }, [onGraphSelect]);\r\n\r\n  return (\r\n    <div className=\"bg-white shadow rounded-lg p-4\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Візуалізація графа</h2>\r\n      <div className=\"h-[600px] border rounded-lg\">\r\n        <ForceGraph2D\r\n          ref={graphRef}\r\n          graphData={graphData}\r\n          nodeLabel=\"id\"\r\n          nodeColor={() => '#1a56db'}\r\n          linkColor={() => '#e5e7eb'}\r\n          nodeRelSize={6}\r\n          linkWidth={1}\r\n          linkDirectionalParticles={2}\r\n          linkDirectionalParticleSpeed={0.005}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAC/C,OAASC,QAAQ,KAAQ,oBAAoB,CAC7C,OAASC,MAAM,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,CAAEa,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACpE,KAAM,CAAAC,QAAQ,CAAGhB,MAAM,CAAC,CAAC,CAEzB;AACAD,KAAK,CAACkB,SAAS,CAAC,IAAM,CACpB,KAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,OAAO,EAAK,CACnC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAjB,QAAQ,CAACkB,QAAQ,CAACF,OAAO,CAAC,CAC7C,GAAIC,IAAI,CAAE,CACR,KAAM,CAAAE,aAAa,CAAG,CACpBR,KAAK,CAAEM,IAAI,CAACN,KAAK,CAACS,GAAG,CAACC,IAAI,GAAK,CAC7BC,EAAE,CAAED,IAAI,CAACC,EAAE,CACXC,CAAC,CAAEF,IAAI,CAACE,CAAC,CACTC,CAAC,CAAEH,IAAI,CAACG,CACV,CAAC,CAAC,CAAC,CACHZ,KAAK,CAAEK,IAAI,CAACQ,KAAK,CAACL,GAAG,CAACM,IAAI,GAAK,CAC7BC,MAAM,CAAED,IAAI,CAACC,MAAM,CACnBC,MAAM,CAAEF,IAAI,CAACE,MAAM,CACnBC,MAAM,CAAEH,IAAI,CAACG,MACf,CAAC,CAAC,CACJ,CAAC,CACDnB,YAAY,CAACS,aAAa,CAAC,CAC3BlB,MAAM,CAAC6B,IAAI,CAAC,0BAA0B,CAAE,CAAEd,OAAQ,CAAC,CAAC,CACtD,CACF,CAAE,MAAOe,KAAK,CAAE,CACd9B,MAAM,CAAC8B,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACvD,CACF,CAAC,CAED,GAAIvB,aAAa,CAAE,CACjBO,SAAS,CAACP,aAAa,CAAC,CAC1B,CACF,CAAC,CAAE,CAACA,aAAa,CAAC,CAAC,CAEnB,mBACEH,KAAA,QAAK2B,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C9B,IAAA,OAAI6B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,yGAAkB,CAAI,CAAC,cAClE9B,IAAA,QAAK6B,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1C9B,IAAA,CAACJ,YAAY,EACXmC,GAAG,CAAErB,QAAS,CACdJ,SAAS,CAAEA,SAAU,CACrB0B,SAAS,CAAC,IAAI,CACdC,SAAS,CAAEA,CAAA,GAAM,SAAU,CAC3BC,SAAS,CAAEA,CAAA,GAAM,SAAU,CAC3BC,WAAW,CAAE,CAAE,CACfC,SAAS,CAAE,CAAE,CACbC,wBAAwB,CAAE,CAAE,CAC5BC,4BAA4B,CAAE,KAAM,CACrC,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}